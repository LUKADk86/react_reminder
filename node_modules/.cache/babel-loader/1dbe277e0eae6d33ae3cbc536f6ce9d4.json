{"ast":null,"code":"var _jsxFileName = \"/home/lounis/Bureau/redux/react-reminder/react_reminder/src/components/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { add_Reminder, remove_Reminder, clear_Reminders } from '../actions';\nimport moment from 'moment';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      text: '',\n      date: new Date(),\n      time: ''\n    };\n\n    this.render_reminders = () => {\n      const reminders = this.props.reminders;\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, reminders.map(reminder => {\n        return React.createElement(\"li\", {\n          key: reminder.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, reminder.text), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, moment(new Date(reminder.date)).fromNow()), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, reminder.time), React.createElement(\"div\", {\n          className: \"btn btn-danger\",\n          onClick: () => this.props.remove_Reminder(reminder.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"X\"));\n      }));\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Agenda du Rappel\"), React.createElement(\"label\", {\n      htmlFor: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Nom de l'\\xE9v\\xE8nement\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"quel \\xE9venement ?\",\n      className: \"form-control\",\n      value: this.state.text,\n      onChange: e => this.setState({\n        text: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \" Date du l'\\xE9v\\xE8nement\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"date\",\n      className: \"form-control\",\n      name: \"date\",\n      value: this.state.date,\n      onChange: e => this.setState({\n        date: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Heure du l'\\xE9v\\xE8nement\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"time\",\n      className: \"form-control\",\n      name: \"time\",\n      value: this.state.time,\n      onChange: e => this.setState({\n        time: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), this.render_reminders(), React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      onClick: () => {\n        this.props.add_Reminder(this.state.text, this.state.date, this.state.time);\n        this.setState({\n          text: '',\n          date: new Date(),\n          time: ''\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Ajouter un rappel\"), React.createElement(\"button\", {\n      className: \"btn btn-danger btn-block\",\n      onClick: () => {\n        this.props.clear_Reminders();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Supprimer tous les rappels\"));\n  }\n\n}\n/*function mapDispatchToProps(dispatch){\n    return {\n        addreminder: ()=>dispatch(add_Reminder())\n    }\n\n}*/\n\n/*function mapStateToProps(state){\n    return {\n       reminders: state\n    }\n\n}*/\n\n\nexport default connect(state => {\n  return {\n    reminders: state\n  };\n}, {\n  add_Reminder,\n  remove_Reminder,\n  clear_Reminders\n})(App);","map":{"version":3,"sources":["/home/lounis/Bureau/redux/react-reminder/react_reminder/src/components/App.js"],"names":["React","Component","connect","add_Reminder","remove_Reminder","clear_Reminders","moment","App","state","text","date","Date","time","render_reminders","reminders","props","map","reminder","id","fromNow","render","console","log","e","setState","target","value"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux'\nimport { add_Reminder, remove_Reminder, clear_Reminders } from '../actions';\nimport moment from 'moment';\nclass App extends Component{\n    state={\n        text: '',\n        date: new Date(),\n        time: ''\n        \n    }\n    render_reminders= ()=>{\n        const {reminders}=this.props;\n        return(\n            <ul>\n                {reminders.map(((reminder)=>{\n                    return(\n                        <li key={reminder.id}>\n                                <div>{reminder.text}</div>\n                                {/* using moment js module npm i moment to show delay*/}\n                                <div>{moment(new Date(reminder.date)).fromNow()}</div>\n                                <div>{reminder.time}</div>\n                                <div className='btn btn-danger' onClick={()=>this.props.remove_Reminder(reminder.id)}>X</div>\n                        </li>\n                    )\n                }))}\n             </ul>\n        )\n    }\n    render(){\n      console.log(this.props)\n        return(\n            <div className='App'>\n                \n                <h1>Agenda du Rappel</h1>\n\n                <label htmlFor=\"text\">Nom de l'évènement</label><br/>\n                <input\n                    type='text' placeholder=\"quel évenement ?\" className=\"form-control\" value={this.state.text}\n                    onChange={(e)=>this.setState({text:e.target.value})}\n                 /><br/>\n                 \n                 <label htmlFor=\"date\"> Date du l'évènement</label><br/>\n                <input \n                    type=\"date\" className=\"form-control\" name=\"date\" value={this.state.date}\n                    onChange={(e)=>this.setState({date:e.target.value})}\n                /><br/>\n\n                <label htmlFor=\"time\">Heure du l'évènement</label><br/>\n                <input \n                    type=\"time\" className=\"form-control\" name=\"time\" value={this.state.time}\n                    onChange={(e)=>this.setState({time:e.target.value})}\n                /><br/>\n                {this.render_reminders()}\n                <button \n                    className=\"btn btn-primary btn-block\" \n                    onClick={() =>{this.props.add_Reminder(this.state.text, this.state.date, this.state.time)\n                    this.setState({text: '', date: new Date(), time: ''})}}>Ajouter un rappel\n                </button>\n                <button className=\"btn btn-danger btn-block\" onClick={() =>{this.props.clear_Reminders()}}\n                    >Supprimer tous les rappels\n                </button>\n              \n            </div>\n        )\n    }\n}\n/*function mapDispatchToProps(dispatch){\n    return {\n        addreminder: ()=>dispatch(add_Reminder())\n    }\n\n}*/\n/*function mapStateToProps(state){\n    return {\n       reminders: state\n    }\n\n}*/\nexport default connect(state=>{\n    return {\n        reminders: state\n    }\n}, {add_Reminder, remove_Reminder, clear_Reminders})(App);"]},"metadata":{},"sourceType":"module"}